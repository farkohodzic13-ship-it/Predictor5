import streamlit as st

# Postavljanje stranice
st.set_page_config(page_title="Gamble Predictor", page_icon="🎲")

st.title("🎲 Gamble Predictor")
st.write("Dodaj boju klikom na dugme. Aplikacija će procijeniti šanse za sljedeću kartu.")

# Inicijalizacija sesije
if "colors" not in st.session_state:
    st.session_state.colors = []
if "remaining" not in st.session_state:
    st.session_state.remaining = 9  # default

# Funkcija za izračunavanje šansi
def calculate_probability(colors, remaining):
    total_cards = 52
    seen = total_cards - remaining
    black_count = colors.count("B")
    k = len(colors)

    # Bayesian estimator
    p_hat = (1 + black_count) / (2 + k)
    black_seen_est = min(26, round(p_hat * seen))
    black_left = max(0, 26 - black_seen_est)

    P_black = black_left / remaining if remaining > 0 else 0
    P_red = 1 - P_black if remaining > 0 else 0
    return P_black, P_red

# Dugmad za dodavanje boja
col1, col2 = st.columns(2)
with col1:
    if st.button("Dodaj CRNU 🖤"):
        st.session_state.colors.append("B")
with col2:
    if st.button("Dodaj CRVENU ❤️"):
        st.session_state.colors.append("R")

# Broj preostalih karata
st.session_state.remaining = st.number_input(
    "Koliko karata je ostalo do kraja špila?",
    min_value=1, max_value=52,
    value=st.session_state.remaining
)

# Prikaz zadnjih boja
st.write("Zadnje boje:", " ".join(st.session_state.colors[-10:]))

# Izračunavanje i prikaz rezultata
if st.session_state.colors:
    p_black, p_red = calculate_probability(st.session_state.colors, st.session_state.remaining)
    st.subheader("📊 Procjena šansi za sljedeću kartu:")
    st.success(f"CRNA 🖤: {p_black*100:.2f}%")
    st.error(f"CRVENA ❤️: {p_red*100:.2f}%")
